@{
    ViewBag.Title = "菜单管理";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section css{
<style type="text/css">
        .tree-file, .tree-folder {
            width: 0;
        }
    </style>
}
@section bodyElement{
<!-- 新增用户Modal -->
<div class="modal fade" id="menuModal" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h4 id="menuModalTitle" class="modal-title">新增菜单</h4>
			</div>
			<div class="modal-body">
				<form class="form-horizontal" role="form">
					<div class="form-group">
						<label class="col-sm-2 col-sm-offset-1 control-label">父级菜单</label>
						<div class="col-sm-7">
							<select id="menuParent" class="form-control"></select>
						</div>
					</div>
					<div class="form-group">
						<label for="code" class="col-sm-2 col-sm-offset-1 control-label">编码</label>
						<div class="col-sm-7">
							<input type="text" class="form-control" id="code" name="code" autofocus="autofocus"></div>
					</div>
					<div class="form-group">
						<label for="name" class="col-sm-2 col-sm-offset-1 control-label">名称</label>
						<div class="col-sm-7">
							<input type="text" class="form-control" id="name" name="name"></div>
					</div>
					<div class="form-group">
						<label for="linkAddress" class="col-sm-2 col-sm-offset-1 control-label">链接地址</label>
						<div class="col-sm-7">
							<input type="text" class="form-control" name="linkAddress" id="linkAddress"></div>
					</div>
					<div class="form-group">
						<label for="sort" class="col-sm-2 col-sm-offset-1 control-label">排序</label>
						<div class="col-sm-7">
							<input type="text" class="form-control" name="sort" id="sort"></div>
					</div>
					<div class="form-group optionRadio">
						<label class="col-sm-2 col-sm-offset-1 control-label">状态</label>
						<div class="checkbox col-sm-offset-4">
							<label>
								<input type="checkbox" id="status" name="status">启用</label>
						</div>
					</div>
				</form>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-default" data-dismiss="modal">取消</button>
				<button id="menuSave" type="button" class="btn btn-primary">保存</button>
			</div>
		</div>
	</div>
</div>
}
<table id="tg"></table>
@section js{
<script type="text/javascript">
        $(function () {
            var root = getRootPath();
            var tg = $("#tg");
            var menuParentBox = $("#menuParent");
            var codeBox = $("#code");
            var menuNameBox = $("#name");
            var linkBox = $("#linkAddress");
            var sortBox = $("#sort");
            var menuModal = $("#menuModal");
            var menuModalTitle = $("#menuModalTitle");
            var statusBox = $("#status");

            function createOptions(selectNode)
            {
                $.ajax({
                    url: root + '/Menu/GetAllParentMenus',
                    type: 'post',
                    dataType: 'json',
                    async: false,
                    success: function(data){
                        selectNode.empty();
                        selectNode.append($("<option>").val(0).text("一级菜单"));
                        $.each(data, function(index, menu) {
                            selectNode.append($("<option>").val(menu.Id).text(menu.MenuName));
                        });
                    }
                });
            }

            tg.treegrid({
                url: getRootPath() + "/Menu/GetAllMenus",
                idField: 'Id',
                fit: true,
                treeField: 'Code',
                columns: [[
                    { field: 'Id', checkbox: true, width: 100 },
                    { field: 'Code', title: '编码', width: 100 },
                    { field: 'MenuName', title: '名称', width: 100 },
                    { field: 'LinkUrl', title: '链接地址', width: 300 },
                    { field: 'Sort', title: '排序', width: 100 },
                    {field: 'Status', title: '状态', width: 100, formatter: function (value, row, index) {
                            if (value) return "启用";
                            else return "禁用";
                        }
                    },
                ]],
                toolbar: [
                    {
                        iconCls: 'icon-add',
                        text: '新增',
                        handler: function () {
                            createOptions(menuParentBox);
                            menuModalTitle.text("新增菜单");
                            menuParentBox.prop("disabled", false);
                            codeBox.val("").prop("disabled", false);
                            menuNameBox.val("");
                            linkBox.val("");
                            sortBox.val("");
                            statusBox.prop("checked", true);
                            menuModal.modal('show');
                        }

                    }, '-',
                    {
                        iconCls: 'icon-edit',
                        text: '编辑',
                        handler: function () {
                            selectedRow = tg.treegrid("getSelected");
                            if (!selectedRow) {
                                alert("请先选择某个菜单！");
                                return;
                            }
                            createOptions(menuParentBox);
                            if(!selectedRow.ParentId) {
                                menuParentBox.val("0");
                                menuParentBox.prop("disabled", true);
                            } else {
                                var parentNode = tg.treegrid("find", selectedRow.ParentId);
                                menuParentBox.val(parentNode.Id).prop("disabled", false);
                            }
                            codeBox.val(selectedRow.Code).prop("disabled", true);
                            menuNameBox.val(selectedRow.MenuName);
                            linkBox.val(selectedRow.LinkUrl);
                            sortBox.val(selectedRow.Sort);
                            if (selectedRow.Status) {
                                statusBox.prop("checked", true);
                            }
                            else {
                                statusBox.prop("checked", false);
                            }
                            menuModalTitle.text("编辑菜单");
                            menuModal.modal('show');
                        }
                    }, '-',
                    {
                        iconCls: 'icon-cut',
                        text: '删除',
                        handler: function () {
                            selectedRow = tg.treegrid("getSelected");
                            if (!selectedRow) {
                                alert("请先选择某个菜单！");
                                return;
                            }
                            if (window.confirm("确定要删除吗？")) {
                                $.ajax({
                                    url: root + "/Menu/DeleteMenu",
                                    type: "post",
                                    dataType: "json",
                                    data: {
                                        Id: selectedRow.Id
                                    },
                                    success: function (result) {
                                        if (result.status) tg.treegrid("reload");
                                        else alert(result.message);
                                    },
                                    error: function () {
                                        alert("服务器出错");
                                    }
                                })
                            }
                        }
                    }
                ]
            });

            $("#menuSave").on("click", function () {
                if(!codeBox.val().trim() || !menuNameBox.val().trim() || !linkBox.val().trim()) {
                    alert("编码或名称或链接地址不能为空！");
                    return;
                }
                var menu = new Object();
                var properties = [];
                if(codeBox.prop("disabled")) {
                   menu.Id = selectedRow.Id;
                   if(menuNameBox.val().trim() != selectedRow.MenuName) properties.push("MenuName");
                   properties.push("LinkUrl");
                   properties.push("Status");
                   properties.push("Sort");
                   properties.push("ParentId");
                }
                menu.Code = codeBox.val();
                menu.MenuName = menuNameBox.val();
                menu.LinkUrl = linkBox.val();
                menu.Sort = sortBox.val();
                menu.ParentId = menuParentBox.val();
                menu.Status = statusBox.prop("checked") ? true : false;

                $.ajax({
                    type: 'post',
                    url: getRootPath() + "/Menu/AddOrUpdateMenu",
                    dataType: 'json',
                    traditional: true,
                    data: {
                        menuStr: JSON.stringify(menu),
                        properties: properties
                    },
                    success: function (result) {
                        if (result.status) {
                            menuModal.modal("hide");
                            saveSuccessModal();
                            tg.treegrid("reload");
                        } else {
                            alert(result.message);
                        }
                    },
                    error: function() {
                        alert("服务器出错");
                    }
                });
            });
             menuModal.on("keydown", "input", function(event) {
                if(event.keyCode == 13) $("#menuSave").click();
            });
        });
    </script>
}